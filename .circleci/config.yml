version: 2.1

setup: true

orbs:
  continuation: circleci/continuation@0.3.1
#   path-filtering: gendosu/path-filtering-orb@dev:first

jobs:
  generate-config:
    docker:
      - image: bufferings/cimg-cue
    steps:
      - checkout
      - run:
          name: setenv
          command: |
            export GENTESTENV=gentestvalue
      - run:
          name: test
          command: |
            git diff --name-only origin/main origin/<< pipeline.git.branch >> | tee /tmp/.circleci/diff.log
      - run:
          name: Generate config list
          command: |
            find . -type f -regex '.*/\.circleci/.*\.yml' -not -regex '\./\.circleci/config\.yml' \
            | tee .circleci/config-list.txt
      - run:
          name: Generate config
          command: |
            cat .circleci/config-list.txt \
            | awk '{printf "\"%s\" ", $0}' \
            | xargs -0 -I {} sh -c 'cue export {} --out yaml' \
            | tee .circleci/generated_config.yml
      - run:
          name: ls
          command: |
            pwd
            ls -l .circleci
      - persist_to_workspace:
          root: /tmp
          paths:
            - .circleci
      # - continuation/continue:
      #     configuration_path: .circleci/generated_config.yml # use newly generated config to continue

  generate-check:
    parameters:
      gentest:
        description: gentest
        type: string
        default: docs

    docker:
      - image: bufferings/cimg-cue
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/.circleci

      - run:
          name: ls
          command: |
            pwd
            cd /tmp
            ls -l

      - run:
          name: Generate config
          command: |
            cat .circleci/diff.log
workflows:
  setup-workflow:
    jobs:
      - generate-config
      - generate-check:
          requires:
            - generate-config
        # gentest: $GENTESTENV
      # - path-filtering-orb/filter:
      #     workspace_path: .
      #     config-path: .circleci/generated_config.yml
      #     mapping: |
      #       service1/.* build-service1 true
      #       service2/.* build-service2 true
      #     requires:
      #       - generate-config
